"""
Django settings for session_form_csrf project.

Generated by 'django-admin startproject' using Django 2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '3#9e-dy6=xsx&*40#0judf*((lfwxe%cm6=exvo&a*3y^tv@iw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'app01',
]
# https://docs.djangoproject.com/en/2.1/ref/middleware/
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # 'middlewave_test.m1.Row1',
    # 'middlewave_test.m1.Row2',
    # 'middlewave_test.m1.Row3',
]

ROOT_URLCONF = 'session_form_csrf.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'session_form_csrf.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

TEMPLATE_DIRS = (os.path.join(BASE_DIR,  'templates'),)


# Python session 支持5种存储引擎：
# 1、SESSION_ENGINE = 'django.contrib.sessions.backends.db'               # 引擎（默认）默认使用django的sqlite，
# 2、SESSION_ENGINE = 'django.contrib.sessions.backends.cache'            # 缓存-引擎
#    SESSION_CACHE_ALIAS = 'default'                                      # 使用的缓存别名（默认内存缓存，也可以是memcache），此处别名依赖缓存的设置
# 3、SESSION_ENGINE = 'django.contrib.sessions.backends.file'             # 文件-引擎
#    SESSION_FILE_PATH = os.path.join(BASE_DIR, 'cache')                  # 缓存文件路径，如果为None，则使用tempfile模块获取一个临时地址tempfile.gettempdir()
# 4、SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'        # 缓存+数据库-引擎
# 5、SESSION_ENGINE = 'django.contrib.sessions.backends.signed_cookies'   # 加密cookie-引擎

# 注意: 以上5种引擎均支持session默认参数设置，使用方式相同

# session默认参数
# SESSION_COOKIE_NAME ＝ "sessionid"                       # Session的cookie保存在浏览器上时的key，即：sessionid＝随机字符串（默认）
# SESSION_COOKIE_PATH ＝ "/"                               # Session的cookie保存的路径（默认）
# SESSION_COOKIE_DOMAIN = None                             # Session的cookie保存的域名（默认）
# SESSION_COOKIE_SECURE = False                            # 是否Https传输cookie（默认False）
# SESSION_COOKIE_HTTPONLY = True                           # 是否Session的cookie只支持http传输（默认True）
# SESSION_COOKIE_AGE = 1209600                             # Session的cookie失效日期（2周）（默认1209600）
SESSION_EXPIRE_AT_BROWSER_CLOSE = False                  # 是否关闭浏览器使得Session过期（默认False）
SESSION_SAVE_EVERY_REQUEST = True                       # 是否每次请求都保存Session，默认修改之后才保存（默认False）:失效时间从最后请求算起

# 缓存设置
CACHES = {
    'default':{
        'BACKEND':'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': os.path.join(BASE_DIR, 'cache'),
    }
}